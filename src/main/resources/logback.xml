<?xml version="1.0" encoding="UTF-8"?>
<!-- 定期 扫描配置文件 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<!-- 定义参数常量 -->
	<!-- TRACE<DEBUG<INFO<WARN<ERROR -->
	<!-- looger.trace("msg") logger.dubug.. -->
	<property name="log.level" value="debug"/>
	<!-- 最大可以保存的数量   可以保存30天 -->
	<property name="log.maxHistory" value="30"/>
	<!-- 存储的根路径 -->
	<property name="log.filePath" value="${catalina.base}/logs/o2o"/>
	<!-- 输出格式  时间 线程 日志级别  哪个包下哪个类  输出信息-->
	<property name="log.pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}-%msg%n"/>

	<!-- 控制台设置 -->
	<appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
	</appender>


	<!-- DEBUG 滚动保存rolling-->
	<appender name="debugAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 文件路径 -->
		<file>${log.filePath}/debug.log</file>
		<!-- 按时间轮转 -->
		<rollingPolicy calss="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 文件名称 -->
			<fileNamePattern>${log.filePath}/debug/debug.%d{yyyy-MM-dd}.log.zip
			</fileNamePattern>
			<!-- 文件最大保存历史数量 -->
			<maxHistory>${log.maxHistory}</maxHistory>
		</rollingPolicy>
		<!-- 将日志信息转换为字符创 又将其输出 -->
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
		<!-- 符合debug相关的信息才保留 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUT</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- INFO -->
	<appender name="infoAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 文件路径 -->
		<file>${log.filePath}/info.log</file>
		<!-- 按时间轮转 -->
		<rollingPolicy calss="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 文件名称 -->
			<fileNamePattern>${log.filePath}/info/info.%d{yyyy-MM-dd}.log.gz
			</fileNamePattern>
			<!-- 文件最大保存历史数量 -->
			<maxHistory>${log.maxHistory}</maxHistory>
		</rollingPolicy>
		<!-- 将日志信息转换为字符创 又将其输出 相当于layout -->
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
		<!-- 符合debug相关的信息才保留 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- ERROR -->
	<appender name="errorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 文件路径 -->
		<file>${log.filePath}/error.log</file>
		<!-- 按时间轮转 滚动策略-->
		<rollingPolicy calss="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 文件名称 -->
			<fileNamePattern>${log.filePath}/error/error.%d{yyyy-MM-dd}.log.gz
			</fileNamePattern>
			<!-- 文件最大保存历史数量 -->
			<maxHistory>${log.maxHistory}</maxHistory>
		</rollingPolicy>
		<!-- 将日志信息转换为字符创 又将其输出 相当于layout -->
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
		<!-- 符合debug相关的信息才保留 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!--和工程下的包对应 只记录debut以上的日志  输出指定的文件  如果additivity为true  继承了root所以也执行root下边的配置  在控制台输出-->
	<logger name="com.o2o" level="${log.level}" additivity="true">
		<appender-ref ref="debugAppender"/>
		<appender-ref ref="infoAppender"/>
		<appender-ref ref="errorAppender"/>
	</logger>

	<!-- 如果没有配置级别就按这个去执行 -->
	<root level="info">
		<appender-ref ref="consoleAppender"/>
	</root>
</configuration>
